config {
  type: "view",
  schema: "query"
}

SELECT  
    cast(income.id as int64) income_id
    ,income.name
    ,income.status
    ,case 
    when income_type_id = '7' then 'TT 1 lần'
    when income_type_id = '8' then 'TT nhiều lần'
    else 'DX Leaders' 
    end income_type
    -- ,cast(inflow_code_id as int64) inflow_code_id
    -- ,inflow_code.code inflow_code
    -- ,inflow_code.name inflow_code_name
    ,revenue_unit.name revenue_unit
    ,salesperson
    ,safe_cast(split(uuid, '.')[OFFSET(0)] as int64) reference_id
    ,cast(split(amount_received, '.')[OFFSET(0)] as int64) received
    ,cast(split(to_be_received, '.')[OFFSET(0)] as int64) income_value
    ,cast(split(to_be_received, '.')[OFFSET(0)] as int64) - cast(split(amount_received, '.')[OFFSET(0)] as int64) receivable
    ,CASE 
      WHEN CAST(TIMESTAMP_ADD(TIMESTAMP_SECONDS(CAST(due_date AS INT64)), INTERVAL 7 HOUR) AS DATE) = '1970-01-01' THEN NULL 
      ELSE CAST(TIMESTAMP_ADD(TIMESTAMP_SECONDS(CAST(due_date AS INT64)), INTERVAL 7 HOUR) AS DATE) 
    END AS receive_date
    ,CAST(TIMESTAMP_ADD(TIMESTAMP_SECONDS(cast(income.since as int64)), INTERVAL 7 HOUR) AS DATETIME) since
    ,CAST(TIMESTAMP_ADD(TIMESTAMP_SECONDS(cast(income.last_update as int64)), INTERVAL 7 HOUR) AS DATETIME) last_update
    ,income.form
    ,income_customer.name customer_name
    ,income_customer.uid customer_mst
    ,customer_id
    ,reference
    -- ,JSON_EXTRACT_SCALAR(customer_export, '$.id') customer_id
    -- ,JSON_EXTRACT_SCALAR(customer_export, '$.uid') customer_mst
    -- ,JSON_EXTRACT_SCALAR(customer_export, '$.address') customer_name
    -- ,JSON_EXTRACT_SCALAR(customer_export, '$.address') customer_address
FROM `base-datateam.airbyte_base_income.income` income
LEFT JOIN `base-datateam.airbyte_base_income.revenue_unit` revenue_unit ON revenue_unit.id = income.revenue_unit_id
left join `base-datateam.airbyte_base_income.income_customer` income_customer on income.customer_id = income_customer.id
-- where TIMESTAMP_TRUNC(_airbyte_extracted_at, DAY) BETWEEN TIMESTAMP_TRUNC(TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 2 DAY), DAY) AND TIMESTAMP_TRUNC(CURRENT_TIMESTAMP, DAY)



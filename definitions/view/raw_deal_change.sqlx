config {
  type: "view",
  schema: "query"
}


WITH
  deal_field_option AS (
      SELECT * FROM ${ref('raw_deal_field')}
      WHERE key IN ('add_time','expected_close_date','probability','status','stage_id','value','user_id','pipeline')
  ),

--   deal_change_old AS (
--     SELECT
--       deal_id
--       ,user_id
--       ,field_key field_name
--       ,CASE
--         WHEN deal_field_option_old.label is null then old_value
--         ELSE deal_field_option_old.label
--       END old_value
--       ,CASE
--         WHEN deal_field_option_new.label is null then new_value
--         ELSE deal_field_option_new.label
--       END new_value
--       ,DATETIME_ADD(SAFE_CAST(log_time as DATETIME), INTERVAL 7 HOUR) log_time
--       ,MAX(_airbyte_extracted_at) _airbyte_extracted_at
--     FROM `base-datateam.airbyte_pipedrive.old_dealChanges` old_dealChanges
--     LEFT JOIN (SELECT * FROM deal_field_option WHERE key != 'status') deal_field_option_old ON deal_field_option_old.key = old_dealChanges.field_key AND deal_field_option_old.id = SAFE_CAST(old_dealChanges.old_value AS INT64)
--     LEFT JOIN (SELECT * FROM deal_field_option WHERE key != 'status') deal_field_option_new ON deal_field_option_new.key = old_dealChanges.field_key AND deal_field_option_old.id = SAFE_CAST(old_dealChanges.new_value AS INT64)
--     WHERE TIMESTAMP_TRUNC(_airbyte_extracted_at, DAY) < TIMESTAMP("2023-08-01")
--       AND field_key IN ('add_time','expected_close_date','probability','status','stage_id','value','user_id','pipeline')
--     GROUP BY
--       deal_id
--       ,user_id
--       ,field_key
--       ,CASE
--         WHEN deal_field_option_old.label is null then old_value
--         ELSE deal_field_option_old.label
--       END
--       ,CASE
--         WHEN deal_field_option_new.label is null then new_value
--         ELSE deal_field_option_new.label
--       END
--       ,DATETIME_ADD(SAFE_CAST(log_time as DATETIME), INTERVAL 7 HOUR)
--   ),

  deal_change_new AS (
    SELECT
      cast(JSON_EXTRACT_SCALAR(json, '$.data.item_id') as int64) deal_id
      ,cast(JSON_EXTRACT_SCALAR(json, '$.data.user_id') as int64) user_id
      ,JSON_EXTRACT_SCALAR(json, '$.data.field_key') field_name
      ,CASE
        WHEN deal_field_option_old.label is null then JSON_EXTRACT_SCALAR(json, '$.data.old_value') 
        ELSE deal_field_option_old.label 
      END old_value
      ,CASE
        WHEN deal_field_option_new.label is null then JSON_EXTRACT_SCALAR(json, '$.data.new_value')
        ELSE deal_field_option_new.label
      END new_value
      ,DATETIME_ADD(SAFE_CAST(JSON_EXTRACT_SCALAR(json, '$.data.log_time') as DATETIME), INTERVAL 7 HOUR) log_time
      ,MAX(_airbyte_extracted_at) _airbyte_extracted_at
    FROM `base-datateam.airbyte_pipedrive.deal_change`, UNNEST(JSON_EXTRACT_ARRAY(json, '$.data')) AS json
    LEFT JOIN (SELECT key, cast(id as int64) id, max(label) label FROM deal_field_option WHERE key != 'status' GROUP BY cast(id as int64), key) deal_field_option_old ON deal_field_option_old.key = JSON_EXTRACT_SCALAR(json, '$.data.field_key') AND deal_field_option_old.id = SAFE_CAST(JSON_EXTRACT_SCALAR(json, '$.data.old_value') AS INT64)
    LEFT JOIN (SELECT key, cast(id as int64) id, max(label) label FROM deal_field_option WHERE key != 'status' GROUP BY cast(id as int64), key) deal_field_option_new ON deal_field_option_new.key = JSON_EXTRACT_SCALAR(json, '$.data.field_key') AND deal_field_option_new.id = SAFE_CAST(JSON_EXTRACT_SCALAR(json, '$.data.new_value') AS INT64)
    WHERE 
        -- TIMESTAMP_TRUNC(_airbyte_extracted_at, DAY) >= TIMESTAMP("2023-08-01")
      TIMESTAMP_TRUNC(_airbyte_extracted_at, DAY) BETWEEN TIMESTAMP(TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 DAY)) AND TIMESTAMP(CURRENT_TIMESTAMP())
      AND cast(JSON_EXTRACT_SCALAR(json, '$.data.item_id') as int64) is not null 
      -- AND object = 'dealChange'
      AND JSON_EXTRACT_SCALAR(json, '$.data.field_key') IN ('add_time','expected_close_date','probability','status','stage_id','value','user_id','pipeline')
    GROUP BY
      cast(JSON_EXTRACT_SCALAR(json, '$.data.item_id') as int64)
      ,cast(JSON_EXTRACT_SCALAR(json, '$.data.user_id') as int64)
      ,JSON_EXTRACT_SCALAR(json, '$.data.field_key')
      ,CASE
        WHEN deal_field_option_old.label is null then JSON_EXTRACT_SCALAR(json, '$.data.old_value') 
        ELSE deal_field_option_old.label 
      END
      ,CASE
        WHEN deal_field_option_new.label is null then JSON_EXTRACT_SCALAR(json, '$.data.new_value')
        ELSE deal_field_option_new.label
      END
      ,DATETIME_ADD(SAFE_CAST(JSON_EXTRACT_SCALAR(json, '$.data.log_time') as DATETIME), INTERVAL 7 HOUR)
  )

--   deal_change_done AS (
--     SELECT * EXCEPT(_airbyte_extracted_at) FROM deal_change_old
--     UNION ALL
--     SELECT * EXCEPT(_airbyte_extracted_at) FROM deal_change_new
--   )

SELECT
    MD5(CONCAT(
            IFNULL(cast(deal_id AS STRING), ''),
            IFNULL(cast(user_id AS STRING), ''),
            IFNULL(field_name, ''),
            IFNULL(old_value, ''),
            IFNULL(new_value, ''),
            IFNULL(cast(log_time AS STRING), '')
        )) _id_
    ,deal_id
    ,user_id
    ,field_name
    ,old_value
    ,new_value
    ,log_time
FROM deal_change_new









